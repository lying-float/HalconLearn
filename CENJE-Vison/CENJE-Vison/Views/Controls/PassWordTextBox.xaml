<UserControl x:Class="CENJE_Vison.Views.Controls.PassWordTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:control="clr-namespace:CENJE_Vison.Views.Controls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="190" d:DesignWidth="540">
    <UserControl.Resources>
        <GeometryGroup x:Key="keyboard">
            <GeometryGroup.Children>
                <PathGeometry Figures="M1024 139.636364c27.927273 0 46.545455 18.618182 46.545455 46.545454v651.636364c0 27.927273-18.618182 46.545455-46.545455 46.545454H93.090909c-27.927273 0-46.545455-18.618182-46.545454-46.545454V186.181818c0-27.927273 18.618182-46.545455 46.545454-46.545454h930.909091m0-46.545455H93.090909C41.890909 93.090909 0 134.981818 0 186.181818v651.636364c0 51.2 41.890909 93.090909 93.090909 93.090909h930.909091c51.2 0 93.090909-41.890909 93.090909-93.090909V186.181818c0-51.2-41.890909-93.090909-93.090909-93.090909z"></PathGeometry>
                <PathGeometry Figures="M902.981818 740.072727H214.109091c-13.963636 0-23.272727-9.309091-23.272727-23.272727s9.309091-23.272727 23.272727-23.272727h688.872727c13.963636 0 23.272727 9.309091 23.272727 23.272727s-9.309091 23.272727-23.272727 23.272727z"></PathGeometry>
                <PathGeometry Figures="M237.381818 339.781818m-46.545454 0a46.545455 46.545455 0 1 0 93.090909 0 46.545455 46.545455 0 1 0-93.090909 0Z"></PathGeometry>
                <PathGeometry Figures="M879.709091 339.781818m-46.545455 0a46.545455 46.545455 0 1 0 93.090909 0 46.545455 46.545455 0 1 0-93.090909 0Z"></PathGeometry>
                <PathGeometry Figures="M665.6 339.781818m-46.545455 0a46.545455 46.545455 0 1 0 93.09091 0 46.545455 46.545455 0 1 0-93.09091 0Z"></PathGeometry>
                <PathGeometry Figures="M451.490909 339.781818m-46.545454 0a46.545455 46.545455 0 1 0 93.090909 0 46.545455 46.545455 0 1 0-93.090909 0Z"></PathGeometry>
                <PathGeometry Figures="M237.381818 512m-46.545454 0a46.545455 46.545455 0 1 0 93.090909 0 46.545455 46.545455 0 1 0-93.090909 0Z"></PathGeometry>
                <PathGeometry Figures="M879.709091 512m-46.545455 0a46.545455 46.545455 0 1 0 93.090909 0 46.545455 46.545455 0 1 0-93.090909 0Z"></PathGeometry>
                <PathGeometry Figures="M665.6 512m-46.545455 0a46.545455 46.545455 0 1 0 93.09091 0 46.545455 46.545455 0 1 0-93.09091 0Z"></PathGeometry>
                <PathGeometry Figures="M451.490909 512m-46.545454 0a46.545455 46.545455 0 1 0 93.090909 0 46.545455 46.545455 0 1 0-93.090909 0Z"></PathGeometry>

            </GeometryGroup.Children>
        </GeometryGroup>

        <Style x:Key="kbtn" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="20"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Foreground" Value="Gray"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="PART_root" BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                            <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path Data="{StaticResource keyboard}" Fill="{Binding Path=Foreground,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource TemplatedParent}}"></Path>
                            </Viewbox>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="Black"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="background" Color="#E8E8E8"></SolidColorBrush>
        <SolidColorBrush x:Key="keybackground" Color="#FEFEFE"></SolidColorBrush>
        <SolidColorBrush x:Key="press" Color="#FFCD43"></SolidColorBrush>
        <control:UperConvert x:Key="UperConvert"></control:UperConvert>
        <control:ShiftConvert x:Key="ShiftConvert"></control:ShiftConvert>
        <system:String x:Key="eq">=</system:String>
        <system:String x:Key="gang">\</system:String>
        <system:String x:Key="yinhao">'</system:String>
        <system:String x:Key="douhao">,</system:String>

        <Style x:Key="keyrow" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Horizontal"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        </Style>

        <Style x:Key="button" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
            <Setter Property="Width" Value="30"></Setter>
            <Setter Property="Height" Value="29"></Setter>
            <Setter Property="Margin" Value="3,1"></Setter>
            <Setter Property="Background" Value="{StaticResource keybackground}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="PART_border" CornerRadius="4" Background="{TemplateBinding Background}">
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource press}"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="toggle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="30"></Setter>
            <Setter Property="Height" Value="29"></Setter>
            <Setter Property="Margin" Value="3,1"></Setter>
            <Setter Property="Background" Value="{StaticResource keybackground}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="PART_border" CornerRadius="4" Background="{TemplateBinding Background}">
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="PART_border" Property="Background" Value="{StaticResource press}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource press}"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Border BorderThickness="{Binding PwdThickness,RelativeSource={RelativeSource AncestorType=control:PassWordTextBox},UpdateSourceTrigger=PropertyChanged}"
            BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=control:PassWordTextBox},UpdateSourceTrigger=PropertyChanged}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Background="#F0F0F0" BorderThickness="0" Visibility="{Binding ShowTitle,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType=control:PassWordTextBox}}">
                <TextBlock Margin="2" FontSize="16" VerticalAlignment="Center" Text="{Binding StrTitle,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource AncestorType=control:PassWordTextBox}}"></TextBlock>
            </Border>
            <PasswordBox Grid.Column="1" TabIndex="9" BorderThickness="0" MaxLength="32" 
                     PasswordChanged="PasswordBox_OnPasswordChanged"  Background="Transparent" 
                     VerticalContentAlignment="Center" Name="passwordBox"></PasswordBox>
            <Button Grid.Column="2" Style="{StaticResource kbtn}" Click="OpenOrCloseKeyBoard"></Button>
            <Popup AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=passwordBox,UpdateSourceTrigger=PropertyChanged}"
               IsOpen="{Binding VisibleKeyBoard,RelativeSource={RelativeSource AncestorType=control:PassWordTextBox},UpdateSourceTrigger=PropertyChanged}" Width="540">
                <Border CornerRadius="5" Background="{StaticResource background}">
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <!--row1-->
                        <StackPanel Grid.Row="0" Style="{StaticResource keyrow}">
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=`}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=1}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=2}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=3}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=4}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=5}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=6}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=7}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=8}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=9}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=0}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=-}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter={StaticResource eq}}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Width="64"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}">Back</Button>
                        </StackPanel>
                        <!--row2-->
                        <StackPanel Grid.Row="1" Style="{StaticResource keyrow}">
                            <Button Style="{StaticResource button}" Width="45" 
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}">Tab</Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=q}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=w}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=e}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=r}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=t}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=y}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=u}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=i}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=o}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=p}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=[}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=]}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Width="48" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter={StaticResource gang}}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                        </StackPanel>
                        <!--row3-->
                        <StackPanel Grid.Row="2" Style="{StaticResource keyrow}">
                            <ToggleButton x:Name="caps" Style="{StaticResource toggle}" Width="64" Content="Caps" 
                              IsChecked="{Binding Caps,Mode=TwoWay,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}"></ToggleButton>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=a}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=s}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=d}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=f}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=g}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=h}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=j}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=k}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=l}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=;}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter={StaticResource yinhao}}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>

                        </StackPanel>
                        <Button Grid.Row="2" Grid.RowSpan="3" Height="105" HorizontalAlignment="Right" Style="{StaticResource button}" 
                    Width="65" Content="Enter" Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                    CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                        <!--row4-->
                        <StackPanel Grid.Row="3" Style="{StaticResource keyrow}">
                            <ToggleButton x:Name="shift" Style="{StaticResource toggle}" Width="82" 
                              IsChecked="{Binding Shift,Mode=TwoWay,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}">Shift</ToggleButton>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=z}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=x}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=c}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=v}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=b}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=n}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=caps,Path=IsChecked,Converter={StaticResource UperConvert},ConverterParameter=m}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter={StaticResource douhao}}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>

                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=.}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>

                            <Button Style="{StaticResource button}" Content="{Binding ElementName=shift,Path=IsChecked,Converter={StaticResource ShiftConvert},ConverterParameter=/}"
                        Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}"></Button>
                            <!--<ToggleButton Style="{StaticResource toggle}" Width="80" >Shift</ToggleButton>-->
                        </StackPanel>
                        <!--row5-->
                        <StackPanel Grid.Row="4" Style="{StaticResource keyrow}">
                            <ToggleButton x:Name="ctrl" Style="{StaticResource toggle}" 
                              IsChecked="{Binding Ctrl,Mode=TwoWay,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}">Ctrl</ToggleButton>
                            <!--<Button Style="{StaticResource button}" Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type local:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}">Win</Button>-->
                            <ToggleButton x:Name="alt" Style="{StaticResource toggle}" 
                              IsChecked="{Binding Alt,Mode=TwoWay,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}">Alt</ToggleButton>
                            <Button Style="{StaticResource button}" Width="388" Command="{Binding KeyCommand,RelativeSource={RelativeSource AncestorType={x:Type control:PassWordTextBox}}}" 
                        CommandParameter="{Binding Path=Content,RelativeSource={RelativeSource Self}}">Space</Button>
                            <!--<ToggleButton Style="{StaticResource toggle}" >Alt</ToggleButton>
                <ToggleButton Style="{StaticResource toggle}" >Ctrl</ToggleButton>-->
                        </StackPanel>
                    </Grid>
                </Border>
            </Popup>
        </Grid>
    </Border>
</UserControl>
